모델1 방식

특징 : 요청 및 응답시 요청을 jsp가 받게됨
ex) login.jsp > login_ok.jsp 징검다리 형식으로 연결
jsp > html,css,js가 주 언어가 되고 그 사이에 java를 삽입하여 사용함으로써 서블릿보다 사용이 편리해짐
이 방식은 디자이너, 개발자 모두 코드를 함부로 건드릴 수가 없음


모델 2방식

소규모가게 규모가 아닌 공장 크기의 규모 방식


각각 효율적인 작업을 할 수 있도록 분업 및 공장화 시스템을 만든 것

ex) 기존 방식은 login_ok, join_ok 등을 모두 하나 하나 사람이 구현한다고 생각하면된다.
제2모델 방식은 모든 요청에 대한 것을 한 사람이 받게된다. (Controller)


모델2방식의 특징
1. 웹브라우저에 의한 모든 요청을 서블릿이 받는다.
2. 비즈니스 로직을 DAO빈즈에 의해 처리한다.
3. 결과 출력을 위해 JSP로 포워딩 시켜준다.


모델2방식의 핵심
모든 요청은 서블릿에서 받고 
모든 실행 기능은 DAO Beans로 
구현 이후 JSP로 화면에 보여주게 된다.



***면접질문***
디자인 패턴에 대해 설명하시오.
-디자인은 화면을 의미하는 것이 아닌, 정형화 해놓은 개발 방법론
즉, 내가 어떤 식으로 개발을 할건지에 대한 정형화 시킨 프로세스



MVC (모델2방식과 완벽하게 똑같은 디자인 패턴)
Model & View & Controller 를 분리해논 개발 방법론이다.


MVC 패턴과 모델2 구조의 매핑
모델 - 비즈니스 로직 처리 클래스와 자바빈이 담당(DAO)
뷰 - JSP페이지가 담당
컨트롤러(기존의 _ok를 집합시켜 하나로 만든 것) - 서블릿자바 클래스파일이 담당


모델2와 MVC는 같은 것인가??
모델2는 흐름도, 작동방식을 말하는 것이고
MVC는 이런식으로 개발을 하자고 하는 개발방법론이다.


MVC의 Controller
1. http에 대한 요청을 받음
2. 요청이 어떤 것을 원하는지 요구기능 분석
3. 해당기능의 처리모델 호출
4. request or session 결과저장
5. 적당한 화면으로 전달 (이동이 아닌 처리한 결과를 전달만 한다)



생성자 - 값의 초기화

init() - 기능의 초기화

service()

doGet()		doPost()

destory()


유저프로세스를 하나 만들어서 겟, 포스트 상관없이 모두 유저프로세스로 처리할 수 있도록 한다.

요청받는 명령어는 하나로 만들고, 파라미터로 사용자가 원하는 것을 구분한다.

ex)
aa라는 서블릿을 호출할 때
aa?type=list 혹은 write, login 등의 파라미터로 요청을 구분한다.